document.addEventListener("DOMContentLoaded", function () {
    console.log("üìå DOM completamente cargado.");

    const loader = document.querySelector(".loader");
    const albumsList = document.querySelector(".albums_list");

    if (!loader || !albumsList) {
        console.error("‚ùå Error: No se encontr√≥ el loader o la lista de √°lbumes en el DOM.");
        return;
    }

    console.log("‚úÖ Loader y lista de √°lbumes encontrados en el DOM.");

    // Obtener todas las im√°genes dentro de la lista de √°lbumes
    const images = albumsList.querySelectorAll("img");
    let loadedImages = 0;

    if (images.length === 0) {
        console.log("‚ö† No hay im√°genes en la lista de √°lbumes. Ocultando loader inmediatamente.");
        loader.style.display = "none";
        albumsList.style.display = "block";
        return;
    }

    console.log(`üñº Se encontraron ${images.length} im√°genes. Esperando a que carguen...`);

    function checkAllImagesLoaded() {
        loadedImages++;
        console.log(`üîÑ Imagen cargada (${loadedImages}/${images.length})`);

        if (loadedImages === images.length) {
            console.log("‚úÖ Todas las im√°genes han cargado. Mostrando la lista de √°lbumes.");
            loader.style.display = "none";
            albumsList.style.display = "grid";
        }
    }

    images.forEach((img, index) => {
        if (img.complete) {
            console.log(`üü¢ Imagen ${index + 1} ya estaba en cach√©.`);
            checkAllImagesLoaded(); // Si la imagen ya est√° en cach√©, contarlo inmediatamente
        } else {
            img.onload = () => {
                console.log(`üñº Imagen ${index + 1} cargada correctamente.`);
                checkAllImagesLoaded();
            };
            img.onerror = () => {
                console.warn(`‚ùå Error al cargar la imagen ${index + 1}.`);
                checkAllImagesLoaded();
            };
        }
    });
});


document.addEventListener("DOMContentLoaded", function () {
    console.log("üìå DOM completamente cargado.");

    const loader = document.querySelector(".loader");
    const albumsList = document.querySelector(".singles_list");

    if (!loader || !albumsList) {
        console.error("‚ùå Error: No se encontr√≥ el loader o la lista de √°lbumes en el DOM.");
        return;
    }

    console.log("‚úÖ Loader y lista de √°lbumes encontrados en el DOM.");

    // Obtener todas las im√°genes dentro de la lista de √°lbumes
    const images = albumsList.querySelectorAll("img");
    let loadedImages = 0;

    if (images.length === 0) {
        console.log("‚ö† No hay im√°genes en la lista de √°lbumes. Ocultando loader inmediatamente.");
        loader.style.display = "none";
        albumsList.style.display = "block";
        return;
    }

    console.log(`üñº Se encontraron ${images.length} im√°genes. Esperando a que carguen...`);

    function checkAllImagesLoaded() {
        loadedImages++;
        console.log(`üîÑ Imagen cargada (${loadedImages}/${images.length})`);

        if (loadedImages === images.length) {
            console.log("‚úÖ Todas las im√°genes han cargado. Mostrando la lista de √°lbumes.");
            loader.style.display = "none";
            albumsList.style.display = "grid";
        }
    }

    images.forEach((img, index) => {
        if (img.complete) {
            console.log(`üü¢ Imagen ${index + 1} ya estaba en cach√©.`);
            checkAllImagesLoaded(); // Si la imagen ya est√° en cach√©, contarlo inmediatamente
        } else {
            img.onload = () => {
                console.log(`üñº Imagen ${index + 1} cargada correctamente.`);
                checkAllImagesLoaded();
            };
            img.onerror = () => {
                console.warn(`‚ùå Error al cargar la imagen ${index + 1}.`);
                checkAllImagesLoaded();
            };
        }
    });
});
